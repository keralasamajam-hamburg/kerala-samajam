{"version":3,"sources":["contentful/index.ts","components/RichText/RichText.tsx","pages/DetailedContent/DetailedContent.tsx","contentful/useContentDetail.ts"],"names":["CONTENTFUL_CLIENT","contentful","space","accessToken","RichText","data","className","content","map","contentRow","index","type","nodeType","imageUrl","target","fields","file","url","textData","item","value","join","listData","undefined","key","href","element","console","log","src","alt","listItem","NewsContent","urlSplitted","useParams","id","split","newsDetailData","newsId","useState","loading","detail","newsData","setData","useEffect","getEntry","then","headline","date","image","sys","useContentDetail","length","Spinner","property","name","window","location","colorScheme","showFaces","share","width"],"mappings":"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","file":"static/js/15.2137e30a.chunk.js","sourcesContent":["import * as contentful from 'contentful';\n\nexport const CONTENTFUL_CLIENT = contentful.createClient({\n  space: 'l3rza8k51j1n',\n  accessToken: 'Rf2s92FG4B9lzV78jEL-Xzqu58evFVT7o2kIRBeDCto',\n});","import React, { Fragment } from 'react';\nimport { Divider } from 'antd';\nimport './RichText.scss';\n\nconst RichText: React.FC<{ data: any }> = ({ data }) => {\n  return (\n    <div className={'rows'}>\n      {data?.content?.map((contentRow: any, index: number) => {\n        const type = contentRow.nodeType;\n        const imageUrl = contentRow.data.target?.fields.file.url;\n        const textData = contentRow.content?.map((item: any) => {\n          return item?.value\n        }).join('');\n        const listData = contentRow.content?.map((item: any) => {\n          return item.content?.[0].content\n        })\n        const listItem = () => {\n          switch (type) {\n            case 'text':\n              return <p>{textData}</p>;\n            case 'heading-1':\n              return <h1>{textData}</h1>;\n            case 'heading-2':\n              return <h2>{textData}</h2>;\n            case 'heading-3':\n              return <h3>{textData}</h3>;\n            case 'heading-4':\n              return <h4>{textData}</h4>;\n            case 'heading-5':\n              return <h5>{textData}</h5>;\n            case 'heading-6':\n              return <h6>{textData}</h6>;\n            case 'paragraph':\n              return <p>{textData}</p>;\n            case 'hyperlink':\n              return <a href={textData}>{textData}</a>;\n            case 'entry-hyperlink':\n              return <a href={textData}>{textData}</a>;\n            case 'asset-hyperlink':\n              return <a href={textData}>{textData}</a>;\n            case 'unordered-list':\n              return <ul>{\n                listData.map((element: any) => {\n                  console.log({ element })\n                  return (\n                    <li>{element?.[0].value}</li>\n                  )\n                })}</ul>;\n            case 'ordered-list':\n              return <ol>{\n                listData.map((element: any) => {\n                  console.log({ element })\n                  return (\n                    <li>{element?.[0].value}</li>\n                  )\n                })\n              }</ol>;\n            case 'list-item':\n              return <li>{textData}</li>;\n            case 'blockquote':\n              return <blockquote>{textData}</blockquote>;\n            case 'hr':\n              return <Divider />;\n            case 'embedded-asset-block':\n              return <img src={imageUrl} alt={imageUrl} />;\n            default:\n              return null;\n          }\n        };\n        if (imageUrl !== undefined || textData !== undefined) {\n          return <Fragment key={index}>{listItem()}</Fragment>;\n        }\n      })}\n    </div>\n  );\n};\n\nexport default RichText;\n","import { Divider } from 'antd';\r\nimport React from 'react';\r\nimport { Comments, Like } from 'react-facebook';\r\nimport { useParams } from 'react-router-dom';\r\nimport RichText from '../../components/RichText/RichText';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport { useContentDetail } from '../../contentful/useContentDetail';\r\nimport './DetailedContent.scss';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nconst NewsContent: React.FC = () => {\r\n  const { id } = useParams();\r\n  const urlSplitted = id.split('-');\r\n  const contentId = urlSplitted[urlSplitted.length - 1];\r\n\r\n  const newsDetailData = useContentDetail(contentId);\r\n\r\n  if (newsDetailData.loading) {\r\n    return <Spinner />;\r\n  }\r\n  if (!newsDetailData.detail) {\r\n    return <h1>Details not available</h1>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"newsContent\">\r\n      <Helmet>\r\n        <title>{newsDetailData.detail?.headline} - Kerala Samajam Hamburg</title>\r\n        <meta property=\"og:title\" content={`${newsDetailData.detail?.headline} - Kerala Samajam Hamburg`} />\r\n        <meta name=\"description\" content={'Kerala Samajam Hamburg: ' + newsDetailData.detail?.headline} />\r\n      </Helmet>\r\n      <div className=\"header\">\r\n        <Divider>\r\n          <h1>{newsDetailData.detail?.headline}</h1>\r\n          <h3>Published on: {newsDetailData.detail?.date}</h3>\r\n        </Divider>\r\n      </div>\r\n      <RichText data={newsDetailData.detail?.content} />\r\n\r\n      <div className=\"fb\">\r\n        <Like href={window.location.href} colorScheme=\"dark\" showFaces share />\r\n        <Comments width=\"100%\" href={window.location.href} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default NewsContent;\r\n","import { Asset, RichTextContent } from 'contentful';\r\nimport { useEffect, useState } from 'react';\r\nimport { CONTENTFUL_CLIENT } from './index';\r\n\r\ninterface NewsStore {\r\n  loading: boolean;\r\n  detail?: {\r\n    headline: string;\r\n    content: RichTextContent;\r\n    date: Date;\r\n    image: string;\r\n    id: string;\r\n  };\r\n}\r\n\r\nexport const useContentDetail = (newsId: string): NewsStore => {\r\n  const [newsData, setData] = useState<NewsStore>({\r\n    loading: true,\r\n    detail: undefined,\r\n  });\r\n\r\n  useEffect(() => {\r\n    type ExpectedOutput = {\r\n      headline: string;\r\n      content: RichTextContent;\r\n      date: Date;\r\n      image: Asset;\r\n    };\r\n\r\n    CONTENTFUL_CLIENT.getEntry<ExpectedOutput>(newsId).then((item) => {\r\n      setData({\r\n        loading: false,\r\n        detail: {\r\n          headline: item.fields.headline,\r\n          content: item.fields.content,\r\n          date: item.fields.date,\r\n          image: item.fields.image?.fields.file.url,\r\n          id: item.sys.id,\r\n        },\r\n      });\r\n    });\r\n  }, [newsId]);\r\n  return newsData;\r\n};\r\n"],"sourceRoot":""}