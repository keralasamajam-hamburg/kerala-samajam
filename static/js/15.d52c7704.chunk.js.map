{"version":3,"sources":["contentful/index.ts","pages/Team/Team.tsx","contentful/useBoardMembers.ts"],"names":["CONTENTFUL_CLIENT","contentful","space","accessToken","Meta","Card","BoardMembers","boardMembersData","useState","loading","members","boardMembers","setBoardMembers","useEffect","getEntries","content_type","then","response","items","map","item","name","fields","role","priority","image","file","url","sort","useBoardMembers","Spinner","membersArray","CTMemberArray","filter","element","ITMemberArray","committeMmbers","includes","key","className","hoverable","cover","alt","src","style","height","objectFit","title","description","property","content","slice","member","index"],"mappings":"yHAAA,sCAEaA,EAFb,OAEiCC,EAAwB,CACvDC,MAAO,eACPC,YAAa,iD,0JCGRC,G,OAAQC,IAARD,MAuFQE,UArFgB,WAC7B,IAAMC,ECGuB,WAAyB,IAAD,EACbC,mBAA2B,CACjEC,SAAS,EACTC,QAAS,KAH0C,mBAC9CC,EAD8C,KAChCC,EADgC,KAqCrD,OA/BAC,qBAAU,WAaRb,IAAkBc,WAZJ,CACZC,aAAc,SACd,qCAAsC,QACtC,oCAAoC,IAScC,MAAK,SAAAC,GACvD,IAAMP,EAAUO,EAASC,MACtBC,KAAI,SAAAC,GAAS,IAAD,EACX,MAAO,CACLC,KAAMD,EAAKE,OAAOD,KAClBE,KAAMH,EAAKE,OAAOC,KAAKD,OAAOC,KAC9BC,SAAUJ,EAAKE,OAAOC,KAAKD,OAAOE,SAClCC,MAAK,UAAEL,EAAKE,OAAOG,aAAd,aAAE,EAAmBH,OAAOI,KAAKC,QAGzCC,MAAK,uBAAEJ,SAAF,EAAiBA,YAEzBZ,EAAgB,CACdH,SAAS,EACTC,iBAGH,IACIC,EDxCkBkB,GACzB,GAAItB,EAAiBE,QACnB,OAAO,kBAACqB,EAAA,EAAD,MAET,IAAMC,EAAexB,EAAiBG,QAChCsB,EAAgBD,EACnBE,QAAO,SAAAC,GAAO,MAAqB,cAAjBA,EAAQX,QAC1BJ,KAAI,SAAAC,GAAI,OAAIA,EAAKC,QACdc,EAAgBJ,EACnBE,QAAO,SAAAC,GAAO,MAAqB,cAAjBA,EAAQX,QAC1BJ,KAAI,SAAAC,GAAI,OAAIA,EAAKC,QAEde,EAAiBL,EACpBE,QAAO,SAAAb,GAAI,OAAK,CAAC,YAAa,aAAaiB,SAASjB,EAAKG,SACzDJ,KAAI,SAAAe,GACH,OACE,yBAAKI,IAAKJ,EAAQb,KAAMkB,UAAU,cAChC,kBAAC,IAAD,CACEA,UAAU,OACVC,WAAS,EACTC,MACE,yBACEC,IAAKR,EAAQb,KACbsB,IAAKT,EAAQT,MACbmB,MAAO,CAACC,OAAQ,IAAKC,UAAW,YAIpC,kBAAC1C,EAAD,CACEmC,UAAU,OACVQ,MAAOb,EAAQb,KACf2B,YAAad,EAAQX,YAOjC,OACE,oCACE,kBAAC,IAAD,KACE,gEACA,0BAAM0B,SAAS,WAAWC,QAAS,mCAErC,kBAAC,IAAD,KACE,oDAEF,yBAAKX,UAAU,WACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,aAAaH,EAAee,MAAM,EAAG,IACpD,yBAAKZ,UAAU,aAAaH,EAAee,MAAM,EAAG,IACpD,yBAAKZ,UAAU,aAAaH,EAAee,MAAM,KAEnD,yBAAKZ,UAAU,0BACb,yBAAKA,UAAU,aAAaH,KAGhC,kBAAC,IAAD,KACE,8CAEF,6BACGJ,EAAcb,KAAI,SAACiC,EAAQC,GAC1B,OACE,yBAAKd,UAAU,QAAQD,IAAKe,GAC1B,4BAAKD,QAKb,kBAAC,IAAD,KACE,4DAEF,6BACGjB,EAAchB,KAAI,SAACiC,EAAQC,GAC1B,OACE,yBAAKd,UAAU,QAAQD,IAAKe,GAC1B,4BAAKD","file":"static/js/15.d52c7704.chunk.js","sourcesContent":["import * as contentful from \"contentful\";\n\nexport const CONTENTFUL_CLIENT = contentful.createClient({\n  space: \"l3rza8k51j1n\",\n  accessToken: \"Rf2s92FG4B9lzV78jEL-Xzqu58evFVT7o2kIRBeDCto\",\n});","import React from \"react\";\r\nimport {Card, Divider} from \"antd\";\r\nimport {useBoardMembers} from \"../../contentful/useBoardMembers\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\nimport {Helmet} from \"react-helmet-async\";\r\nimport \"./Team.scss\";\r\n\r\nconst {Meta} = Card;\r\n\r\nconst BoardMembers: React.FC = () => {\r\n  const boardMembersData = useBoardMembers();\r\n  if (boardMembersData.loading) {\r\n    return <Spinner />;\r\n  }\r\n  const membersArray = boardMembersData.members;\r\n  const CTMemberArray = membersArray\r\n    .filter(element => element.role === \"CT Member\")\r\n    .map(item => item.name);\r\n  const ITMemberArray = membersArray\r\n    .filter(element => element.role === \"IT Member\")\r\n    .map(item => item.name);\r\n\r\n  const committeMmbers = membersArray\r\n    .filter(item => ![\"CT Member\", \"IT Member\"].includes(item.role))\r\n    .map(element => {\r\n      return (\r\n        <div key={element.name} className=\"memberCard\">\r\n          <Card\r\n            className=\"card\"\r\n            hoverable\r\n            cover={\r\n              <img\r\n                alt={element.name}\r\n                src={element.image}\r\n                style={{height: 320, objectFit: \"cover\"}}\r\n              />\r\n            }\r\n          >\r\n            <Meta\r\n              className=\"text\"\r\n              title={element.name}\r\n              description={element.role}\r\n            />\r\n          </Card>\r\n        </div>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Team - Kerala Samajam Hamburg</title>\r\n        <meta property=\"og:title\" content={\"Team - Kerala Samajam Hamburg\"} />\r\n      </Helmet>\r\n      <Divider>\r\n        <h2>Executive Committee</h2>\r\n      </Divider>\r\n      <div className=\"wrapper\">\r\n        <div className=\"committeMembers desktop\">\r\n          <div className=\"grid-of-2\">{committeMmbers.slice(0, 2)}</div>\r\n          <div className=\"grid-of-3\">{committeMmbers.slice(2, 5)}</div>\r\n          <div className=\"grid-of-2\">{committeMmbers.slice(5)}</div>\r\n        </div>\r\n        <div className=\"committeMembers mobile\">\r\n          <div className=\"grid-of-2\">{committeMmbers}</div>\r\n        </div>\r\n      </div>\r\n      <Divider>\r\n        <h2>Creative Team</h2>\r\n      </Divider>\r\n      <div>\r\n        {CTMemberArray.map((member, index) => {\r\n          return (\r\n            <div className=\"nonEC\" key={index}>\r\n              <h3>{member}</h3>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <Divider>\r\n        <h2>Web development and support</h2>\r\n      </Divider>\r\n      <div>\r\n        {ITMemberArray.map((member, index) => {\r\n          return (\r\n            <div className=\"nonEC\" key={index}>\r\n              <h3>{member}</h3>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default BoardMembers;\r\n","import {useEffect, useState} from \"react\";\r\nimport {CONTENTFUL_CLIENT} from \"./index\";\r\nimport {Entry, Asset} from \"contentful\";\r\n\r\ninterface BoardMemberStore {\r\n  loading: boolean;\r\n  members: {\r\n    name: string;\r\n    image?: string;\r\n    role: string;\r\n  }[];\r\n}\r\n\r\nexport const useBoardMembers = (): BoardMemberStore => {\r\n  const [boardMembers, setBoardMembers] = useState<BoardMemberStore>({\r\n    loading: true,\r\n    members: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const query = {\r\n      content_type: \"person\",\r\n      \"fields.role.sys.contentType.sys.id\": \"roles\",\r\n      \"fields.role.fields.isBoardMember\": true,\r\n    };\r\n\r\n    type ExpectedOutput = {\r\n      name: string;\r\n      image: Asset;\r\n      role: Entry<{role: string; priority: number}>;\r\n    };\r\n\r\n    CONTENTFUL_CLIENT.getEntries<ExpectedOutput>(query).then(response => {\r\n      const members = response.items\r\n        .map(item => {\r\n          return {\r\n            name: item.fields.name,\r\n            role: item.fields.role.fields.role,\r\n            priority: item.fields.role.fields.priority,\r\n            image: item.fields.image?.fields.file.url,\r\n          };\r\n        })\r\n        .sort(({priority: a}, {priority: b}) => a - b);\r\n\r\n      setBoardMembers({\r\n        loading: false,\r\n        members,\r\n      });\r\n    });\r\n  }, []);\r\n  return boardMembers;\r\n};\r\n"],"sourceRoot":""}