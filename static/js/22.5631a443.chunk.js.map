{"version":3,"sources":["pages/Contact/Contact.tsx"],"names":["layout","labelCol","span","wrapperCol","validateMessages","required","types","email","Contact","useState","isSending","setIsSending","Form","useForm","form","className","name","onFinish","data","requestOptions","method","headers","body","JSON","stringify","fetch","process","then","response","ok","resetFields","message","success","catch","error","Item","label","rules","type","TextArea","htmlType"],"mappings":"yPAMMA,EAAS,CACbC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,KAGJE,EAAmB,CAEvBC,SAAU,wBACVC,MAAO,CACLC,MAAO,mCAsGIC,UAlGW,WAAO,IAAD,EACIC,oBAAS,GADb,mBACvBC,EADuB,KACZC,EADY,OAEfC,IAAKC,UAAbC,EAFuB,oBA8B9B,OACE,yBAAKC,UAAU,gBACb,kBAAC,IAAD,KACE,oEAEF,kBAAC,IAAD,KACE,6CAEF,kBAAC,IAAD,eACED,KAAMA,GACFd,EAFN,CAGEgB,KAAK,gBACLC,SAvCW,SAACC,GAChBP,GAAa,GAEb,IAAMQ,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAUN,IAEvBO,MACEC,6EACAP,GAECQ,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAMD,EAKR,OAHAjB,GAAa,GACbG,EAAKgB,cACLC,IAAQC,QAAQ,uDACTJ,KAERK,OAAM,WACLtB,GAAa,GACboB,IAAQG,MAAM,wDAiBd9B,iBAAkBA,IAEjBM,GACC,yBAAKK,UAAU,mBACb,kBAAC,IAAD,OAGJ,kBAAC,IAAKoB,KAAN,CACEnB,KAAM,CAAC,QACPoB,MAAM,OACNC,MAAO,CACL,CACEhC,UAAU,KAId,kBAAC,IAAD,OAEF,kBAAC,IAAK8B,KAAN,CACEnB,KAAM,CAAC,SACPoB,MAAM,QACNC,MAAO,CACL,CACEhC,UAAU,EACViC,KAAM,WAIV,kBAAC,IAAD,OAEF,kBAAC,IAAKH,KAAN,CACEnB,KAAM,CAAC,WACPoB,MAAM,UACNC,MAAO,CACL,CACEhC,UAAU,KAId,kBAAC,IAAMkC,SAAP,OAEF,kBAAC,IAAKJ,KAAN,CAAWpB,UAAU,gBACnB,kBAAC,IAAD,CAAQuB,KAAK,UAAUE,SAAS,UAAhC","file":"static/js/22.5631a443.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Form, Input, Button, message, Divider} from \"antd\";\r\nimport \"./Contact.scss\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\nimport {Helmet} from \"react-helmet-async\";\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 6,\r\n  },\r\n  wrapperCol: {\r\n    span: 14,\r\n  },\r\n};\r\nconst validateMessages = {\r\n  // eslint-disable-next-line\r\n  required: \"${label} is required!\",\r\n  types: {\r\n    email: \"Please enter a valid email ID!\",\r\n  },\r\n};\r\n\r\nconst Contact: React.FC = () => {\r\n  const [isSending, setIsSending] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const onFinish = (data: any) => {\r\n    setIsSending(true);\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\"Content-Type\": \"application/json\"},\r\n      body: JSON.stringify(data),\r\n    };\r\n    fetch(\r\n      process.env.REACT_APP_FUNCTIONS_ENDPOINT + \"/sendMessageToKSH\",\r\n      requestOptions,\r\n    )\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw response;\r\n        }\r\n        setIsSending(false);\r\n        form.resetFields();\r\n        message.success(\"Successfully sent message to Kerala Samajam Hamburg\");\r\n        return response;\r\n      })\r\n      .catch(() => {\r\n        setIsSending(false);\r\n        message.error(\"Failed sending message to Kerala Samajam Hamburg\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact-page\">\r\n      <Helmet>\r\n        <title>Contact - Kerala Samajam Hamburg</title>\r\n      </Helmet>\r\n      <Divider>\r\n        <h2>Contact Form</h2>\r\n      </Divider>\r\n      <Form\r\n        form={form}\r\n        {...layout}\r\n        name=\"nest-messages\"\r\n        onFinish={onFinish}\r\n        validateMessages={validateMessages}\r\n      >\r\n        {isSending && (\r\n          <div className=\"spinner-overlay\">\r\n            <Spinner />\r\n          </div>\r\n        )}\r\n        <Form.Item\r\n          name={[\"name\"]}\r\n          label=\"Name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name={[\"email\"]}\r\n          label=\"Email\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              type: \"email\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name={[\"message\"]}\r\n          label=\"Message\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input.TextArea />\r\n        </Form.Item>\r\n        <Form.Item className=\"submitButton\">\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Send message\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      {/* <TotalMembers />\r\n      <Divider>\r\n        <h2>Click here to become a member!</h2>\r\n      </Divider>\r\n      <BecomeAMember /> */}\r\n    </div>\r\n  );\r\n};\r\nexport default Contact;\r\n"],"sourceRoot":""}