{"version":3,"sources":["assets/images/news-announcement.jpg","pages/News/News.tsx","contentful/useNews.ts"],"names":["module","exports","Meta","Card","News","layoutStore","useLayout","newsContent","useState","loading","news","newsData","setnewsData","useEffect","CONTENTFUL_CLIENT","getEntries","content_type","then","response","items","map","item","headline","fields","content","date","image","file","url","id","sys","useNews","Spinner","newsArray","className","DynamicContent","showLocaleSwitch","property","index","newsDetailLink","split","join","to","key","hoverable","cover","undefined","src","alt","newsImage","title","description","length"],"mappings":"4GAAAA,EAAOC,QAAU,IAA0B,+C,0LCWnCC,EAASC,IAATD,KA2COE,UA1CQ,WACrB,IAAMC,EAAcC,YAAU,QACxBC,ECCe,WAAkB,IAAD,EACJC,mBAAoB,CAChDC,SAAS,EACTC,KAAM,KAH0B,mBAC7BC,EAD6B,KACnBC,EADmB,KAoCpC,OA9BAC,qBAAU,WAYNC,IAAkBC,WAXJ,CACVC,aAAc,SAWbC,MAAK,SAACC,GACH,IAAMR,EAAOQ,EAASC,MACjBC,KAAI,SAACC,GAAU,IAAD,EACX,MAAO,CACHC,SAAUD,EAAKE,OAAOD,SACtBE,QAASH,EAAKE,OAAOC,QACrBC,KAAMJ,EAAKE,OAAOE,KAClBC,MAAK,UAAEL,EAAKE,OAAOG,aAAd,aAAE,EAAmBH,OAAOI,KAAKC,IACtCC,GAAIR,EAAKS,IAAID,OAGzBjB,EAAY,CACRH,SAAS,EACTC,cAGb,IACIC,EDrCWoB,GACpB,GAAIxB,EAAYE,QACd,OAAO,kBAACuB,EAAA,EAAD,MAGT,IAAMC,EAAY1B,EAAYG,KAC9B,OACE,yBAAKwB,UAAW,gBACd,kBAACC,EAAA,EAAD,CAAgB9B,YAAaA,EAAa+B,kBAAkB,IAC5D,yBAAKF,UAAW,QACd,kBAAC,IAAD,KACE,gEACA,0BAAMG,SAAS,WAAWb,QAAS,mCAEpCS,EAAUb,KAAI,SAACC,EAAMiB,GACpB,IAAMC,EAAc,mBAAelB,EAAKC,SAASkB,MAAM,KAAKC,KAAK,KAA7C,YAAqDpB,EAAKQ,IAC9E,OACE,kBAAC,IAAD,CAAMa,GAAIH,EAAgBI,IAAKL,GAC7B,kBAAC,IAAD,CACEM,WAAS,EACTC,WAAsBC,IAAfzB,EAAKK,MAAsB,yBAAKqB,IAAK1B,EAAKK,MAAOsB,IAAI,KAAQ,yBAAKD,IAAKE,IAAWD,IAAI,MAC7F,kBAAC9C,EAAD,CAAMgD,MAAO7B,EAAKC,SAAU6B,YAAW,uBAAkB9B,EAAKI,aAMhD,IAArBQ,EAAUmB,OACT,kBAAC,IAAD,CACED,YACE,8DAKF","file":"static/js/16.88dc040c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/news-announcement.6117f73b.jpg\";","import React from \"react\";\r\nimport { Card, Empty } from \"antd\";\r\nimport { useNews } from \"../../contentful/useNews\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\nimport \"./News.scss\";\r\nimport newsImage from \"../../assets/images/news-announcement.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useLayout } from \"../../contentful/useLayout\";\r\nimport DynamicContent from \"../../components/DynamicContent/DynamicContent\";\r\n\r\nconst { Meta } = Card;\r\nconst News: React.FC = () => {\r\n  const layoutStore = useLayout(\"NEWS\");\r\n  const newsContent = useNews();\r\n  if (newsContent.loading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  const newsArray = newsContent.news;\r\n  return (\r\n    <div className={\"news-wrapper\"}>\r\n      <DynamicContent layoutStore={layoutStore} showLocaleSwitch={false} />\r\n      <div className={\"news\"}>\r\n        <Helmet>\r\n          <title>News - Kerala Samajam Hamburg</title>\r\n          <meta property=\"og:title\" content={\"News - Kerala Samajam Hamburg\"} />\r\n        </Helmet>\r\n        {newsArray.map((item, index) => {\r\n          const newsDetailLink = `/details/${item.headline.split(\" \").join(\"-\")}-${item.id}`;\r\n          return (\r\n            <Link to={newsDetailLink} key={index}>\r\n              <Card\r\n                hoverable\r\n                cover={item.image !== undefined ? <img src={item.image} alt=\"\" /> : <img src={newsImage} alt=\"\" />}>\r\n                <Meta title={item.headline} description={`Published on ${item.date}`} />\r\n              </Card>\r\n            </Link>\r\n          );\r\n        })}\r\n\r\n        {newsArray.length === 0 ? (\r\n          <Empty\r\n            description={\r\n              <h1>\r\n                No news found at the moment!\r\n              </h1>\r\n            }\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default News;\r\n","import { useEffect, useState } from \"react\";\r\nimport { CONTENTFUL_CLIENT } from \"./index\";\r\nimport { RichTextContent, Asset } from \"contentful\";\r\n\r\ninterface NewsStore {\r\n    loading: boolean;\r\n    news: {\r\n        headline: string;\r\n        content: RichTextContent;\r\n        date: Date;\r\n        image: string;\r\n        id: string;\r\n    }[];\r\n}\r\n\r\nexport const useNews = (): NewsStore => {\r\n    const [newsData, setnewsData] = useState<NewsStore>({\r\n        loading: true,\r\n        news: []\r\n    });\r\n\r\n    useEffect(() => {\r\n        const query = {\r\n            content_type: \"news\",\r\n        };\r\n\r\n        type ExpectedOutput = {\r\n            headline: string;\r\n            content: RichTextContent;\r\n            date: Date;\r\n            image: Asset;\r\n        };\r\n\r\n        CONTENTFUL_CLIENT.getEntries<ExpectedOutput>(query)\r\n            .then((response) => {\r\n                const news = response.items\r\n                    .map((item) => {\r\n                        return {\r\n                            headline: item.fields.headline,\r\n                            content: item.fields.content,\r\n                            date: item.fields.date,\r\n                            image: item.fields.image?.fields.file.url,\r\n                            id: item.sys.id\r\n                        };\r\n                    });\r\n                setnewsData({\r\n                    loading: false,\r\n                    news,\r\n                });\r\n            });\r\n    }, []);\r\n    return newsData;\r\n};"],"sourceRoot":""}