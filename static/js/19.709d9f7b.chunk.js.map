{"version":3,"sources":["contentful/index.ts","pages/Team/Team.tsx","contentful/useBoardMembers.ts"],"names":["CONTENTFUL_CLIENT","contentful","space","accessToken","Meta","Card","BoardMembers","boardMembersData","useState","loading","members","boardMembers","setBoardMembers","useEffect","getEntries","content_type","then","response","items","map","item","name","fields","role","priority","image","file","url","sort","useBoardMembers","Spinner","committeMmbers","element","index","key","className","hoverable","cover","alt","src","style","height","objectFit","title","description","property","content","slice"],"mappings":"yHAAA,sCAEaA,EAFb,OAEiCC,EAAwB,CACvDC,MAAO,eACPC,YAAa,iD,kKCEPC,EAASC,IAATD,KAuCOE,UArCgB,WAC7B,IAAMC,ECIuB,WAAyB,IAAD,EACbC,mBAA2B,CACjEC,SAAS,EACTC,QAAS,KAH0C,mBAC9CC,EAD8C,KAChCC,EADgC,KAsCrD,OAhCAC,qBAAU,WAaRb,IAAkBc,WAZJ,CACZC,aAAc,SACd,qCAAsC,QACtC,oCAAoC,IAUnCC,MAAK,SAACC,GACL,IAAMP,EAAUO,EAASC,MACtBC,KAAI,SAACC,GACJ,MAAO,CACLC,KAAMD,EAAKE,OAAOD,KAClBE,KAAMH,EAAKE,OAAOC,KAAKD,OAAOC,KAC9BC,SAAUJ,EAAKE,OAAOC,KAAKD,OAAOE,SAClCC,MAAOL,EAAKE,OAAOG,MAAMH,OAAOI,KAAKC,QAGxCC,MAAK,uBAAGJ,SAAH,EAAoBA,YAE5BZ,EAAgB,CACdH,SAAS,EACTC,iBAGL,IACIC,ED1CkBkB,GACzB,GAAItB,EAAiBE,QACnB,OAAO,kBAACqB,EAAA,EAAD,MAGT,IACMC,EADexB,EAAiBG,QACFS,KAAI,SAACa,EAASC,GAChD,OACE,yBAAKC,IAAKD,EAAOE,UAAU,cACzB,kBAAC,IAAD,CACEA,UAAU,OACVC,WAAS,EACTC,MAAO,yBAAKC,IAAKN,EAAQX,KAAMkB,IAAKP,EAAQP,MAAOe,MAAO,CAAEC,OAAQ,IAAKC,UAAW,YACpF,kBAACtC,EAAD,CAAM+B,UAAU,OAAOQ,MAAOX,EAAQX,KAAMuB,YAAaZ,EAAQT,YAKzE,OACE,oCACE,kBAAC,IAAD,KACE,gEACA,0BAAMsB,SAAS,WAAWC,QAAS,mCAErC,kBAAC,IAAD,KACE,oDAEF,yBAAKX,UAAU,WACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,aAAaJ,EAAegB,MAAM,EAAG,IACpD,yBAAKZ,UAAU,aAAaJ,EAAegB,MAAM","file":"static/js/19.709d9f7b.chunk.js","sourcesContent":["import * as contentful from 'contentful';\n\nexport const CONTENTFUL_CLIENT = contentful.createClient({\n  space: 'l3rza8k51j1n',\n  accessToken: 'Rf2s92FG4B9lzV78jEL-Xzqu58evFVT7o2kIRBeDCto',\n});","import React from 'react';\r\nimport { Card, Divider } from 'antd';\r\nimport './Team.scss';\r\nimport { useBoardMembers } from '../../contentful/useBoardMembers';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport { Helmet } from 'react-helmet-async';\r\nconst { Meta } = Card;\r\n\r\nconst BoardMembers: React.FC = () => {\r\n  const boardMembersData = useBoardMembers();\r\n  if (boardMembersData.loading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  const membersArray = boardMembersData.members;\r\n  const committeMmbers = membersArray.map((element, index) => {\r\n    return (\r\n      <div key={index} className=\"memberCard\">\r\n        <Card\r\n          className=\"card\"\r\n          hoverable\r\n          cover={<img alt={element.name} src={element.image} style={{ height: 320, objectFit: 'cover' }} />}>\r\n          <Meta className=\"text\" title={element.name} description={element.role} />\r\n        </Card>\r\n      </div>\r\n    );\r\n  });\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Team - Kerala Samajam Hamburg</title>\r\n        <meta property=\"og:title\" content={\"Team - Kerala Samajam Hamburg\"} />\r\n      </Helmet>\r\n      <Divider>\r\n        <h2>Executive Committee</h2>\r\n      </Divider>\r\n      <div className=\"wrapper\">\r\n        <div className=\"committeMembers\">\r\n          <div className=\"grid-of-2\">{committeMmbers.slice(0, 2)}</div>\r\n          <div className=\"grid-of-3\">{committeMmbers.slice(2)}</div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default BoardMembers;\r\n","import { useEffect, useState } from 'react';\nimport { CONTENTFUL_CLIENT } from './index';\nimport { Entry, Asset } from 'contentful';\n\ninterface BoardMemberStore {\n  loading: boolean;\n  members: {\n    name: string;\n    image: string;\n    role: string;\n  }[];\n}\n\nexport const useBoardMembers = (): BoardMemberStore => {\n  const [boardMembers, setBoardMembers] = useState<BoardMemberStore>({\n    loading: true,\n    members: [],\n  });\n\n  useEffect(() => {\n    const query = {\n      content_type: 'person',\n      'fields.role.sys.contentType.sys.id': 'roles',\n      'fields.role.fields.isBoardMember': true,\n    };\n\n    type ExpectedOutput = {\n      name: string;\n      image: Asset;\n      role: Entry<{ role: string; priority: number }>;\n    };\n\n    CONTENTFUL_CLIENT.getEntries<ExpectedOutput>(query)\n      .then((response) => {\n        const members = response.items\n          .map((item) => {\n            return {\n              name: item.fields.name,\n              role: item.fields.role.fields.role,\n              priority: item.fields.role.fields.priority,\n              image: item.fields.image.fields.file.url,\n            };\n          })\n          .sort(({ priority: a }, { priority: b }) => a - b);\n\n        setBoardMembers({\n          loading: false,\n          members,\n        });\n      });\n  }, []);\n  return boardMembers;\n};\n"],"sourceRoot":""}