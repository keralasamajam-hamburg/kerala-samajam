{"version":3,"sources":["contentful/index.ts","assets/images/news-announcement.jpg","pages/Announcements/Announcements.tsx","contentful/useAnnouncements.ts"],"names":["CONTENTFUL_CLIENT","contentful","space","accessToken","module","exports","Meta","Card","Announcements","announcementContent","useState","loading","announcements","newsData","setnewsData","useEffect","getEntries","content_type","then","response","news","items","map","item","headline","fields","content","date","image","file","url","id","sys","useAnnouncements","Spinner","announcementsArray","className","property","index","announcementsDetailLink","split","join","to","key","hoverable","cover","undefined","src","alt","newsImage","title","description","length"],"mappings":"yHAAA,sCAEaA,EAFb,OAEiCC,EAAwB,CACvDC,MAAO,eACPC,YAAa,iD,wCCJfC,EAAOC,QAAU,IAA0B,+C,wKCSpCC,G,OAAQC,IAARD,MAmDQE,UAlDiB,WAC9B,IAAMC,ECIwB,WAA2B,IAAD,EACtBC,mBAA6B,CACzDC,SAAS,EACTC,cAAe,KAHmC,mBAC/CC,EAD+C,KACrCC,EADqC,KAoCtD,OA9BAC,qBAAU,WAYNf,IAAkBgB,WAXJ,CACVC,aAAc,kBAWbC,MAAK,SAACC,GACH,IAAMC,EAAOD,EAASE,MACjBC,KAAI,SAACC,GAAU,IAAD,EACX,MAAO,CACHC,SAAUD,EAAKE,OAAOD,SACtBE,QAASH,EAAKE,OAAOC,QACrBC,KAAMJ,EAAKE,OAAOE,KAClBC,MAAK,UAAEL,EAAKE,OAAOG,aAAd,aAAE,EAAmBH,OAAOI,KAAKC,IACtCC,GAAIR,EAAKS,IAAID,OAGzBjB,EAAY,CACRH,SAAS,EACTC,cAAeQ,SAG5B,IACIP,EDxCmBoB,GAC5B,GAAIxB,EAAoBE,QACtB,OAAO,kBAACuB,EAAA,EAAD,MAGT,IAAMC,EAAqB1B,EAAoBG,cAC/C,OACE,yBAAKwB,UAAW,iBACd,kBAAC,IAAD,KACE,yEACA,0BACEC,SAAS,WACTX,QAAS,4CAGb,kBAAC,IAAD,KACE,8CAEDS,EAAmBb,KAAI,SAACC,EAAMe,GAC7B,IAAMC,EAAuB,mBAAehB,EAAKC,SAC9CgB,MAAM,KACNC,KAAK,KAFqB,YAEblB,EAAKQ,IACrB,OACE,kBAAC,IAAD,CAAMW,GAAIH,EAAyBI,IAAKL,GACtC,kBAAC,IAAD,CACEM,WAAS,EACTC,WACiBC,IAAfvB,EAAKK,MACH,yBAAKmB,IAAKxB,EAAKK,MAAOoB,IAAI,KAE1B,yBAAKD,IAAKE,IAAWD,IAAI,MAI7B,kBAAC1C,EAAD,CACE4C,MAAO3B,EAAKC,SACZ2B,YAAW,uBAAkB5B,EAAKI,aAOb,IAA9BQ,EAAmBiB,OAClB,kBAAC,IAAD,CAAOD,YAAa,uEAClB","file":"static/js/18.5244c740.chunk.js","sourcesContent":["import * as contentful from \"contentful\";\n\nexport const CONTENTFUL_CLIENT = contentful.createClient({\n  space: \"l3rza8k51j1n\",\n  accessToken: \"Rf2s92FG4B9lzV78jEL-Xzqu58evFVT7o2kIRBeDCto\",\n});","module.exports = __webpack_public_path__ + \"static/media/news-announcement.6117f73b.jpg\";","import {Card, Divider, Empty} from \"antd\";\r\nimport React from \"react\";\r\nimport {Helmet} from \"react-helmet-async\";\r\nimport {Link} from \"react-router-dom\";\r\nimport newsImage from \"../../assets/images/news-announcement.jpg\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\nimport {useAnnouncements} from \"../../contentful/useAnnouncements\";\r\nimport \"./Announcements.scss\";\r\n\r\nconst {Meta} = Card;\r\nconst Announcements: React.FC = () => {\r\n  const announcementContent = useAnnouncements();\r\n  if (announcementContent.loading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  const announcementsArray = announcementContent.announcements;\r\n  return (\r\n    <div className={\"announcements\"}>\r\n      <Helmet>\r\n        <title>Announcements - Kerala Samajam Hamburg</title>\r\n        <meta\r\n          property=\"og:title\"\r\n          content={\"Announcements - Kerala Samajam Hamburg\"}\r\n        />\r\n      </Helmet>\r\n      <Divider>\r\n        <h2>Announcements</h2>\r\n      </Divider>\r\n      {announcementsArray.map((item, index) => {\r\n        const announcementsDetailLink = `/details/${item.headline\r\n          .split(\" \")\r\n          .join(\"-\")}-${item.id}`;\r\n        return (\r\n          <Link to={announcementsDetailLink} key={index}>\r\n            <Card\r\n              hoverable\r\n              cover={\r\n                item.image !== undefined ? (\r\n                  <img src={item.image} alt=\"\" />\r\n                ) : (\r\n                  <img src={newsImage} alt=\"\" />\r\n                )\r\n              }\r\n            >\r\n              <Meta\r\n                title={item.headline}\r\n                description={`Published on ${item.date}`}\r\n              />\r\n            </Card>\r\n          </Link>\r\n        );\r\n      })}\r\n\r\n      {announcementsArray.length === 0 ? (\r\n        <Empty description={<h1>No announcements found at the moments</h1>} />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\nexport default Announcements;\r\n","import { useEffect, useState } from \"react\";\r\nimport { CONTENTFUL_CLIENT } from \"./index\";\r\nimport { RichTextContent, Asset } from \"contentful\";\r\n\r\ninterface AnnouncementsStore {\r\n    loading: boolean;\r\n    announcements: {\r\n        headline: string;\r\n        content: RichTextContent;\r\n        date: Date;\r\n        image: string;\r\n        id: string;\r\n    }[];\r\n}\r\n\r\nexport const useAnnouncements = (): AnnouncementsStore => {\r\n    const [newsData, setnewsData] = useState<AnnouncementsStore>({\r\n        loading: true,\r\n        announcements: []\r\n    });\r\n\r\n    useEffect(() => {\r\n        const query = {\r\n            content_type: \"announcements\",\r\n        };\r\n\r\n        type ExpectedOutput = {\r\n            headline: string;\r\n            content: RichTextContent;\r\n            date: Date;\r\n            image: Asset;\r\n        };\r\n\r\n        CONTENTFUL_CLIENT.getEntries<ExpectedOutput>(query)\r\n            .then((response) => {\r\n                const news = response.items\r\n                    .map((item) => {\r\n                        return {\r\n                            headline: item.fields.headline,\r\n                            content: item.fields.content,\r\n                            date: item.fields.date,\r\n                            image: item.fields.image?.fields.file.url,\r\n                            id: item.sys.id\r\n                        };\r\n                    });\r\n                setnewsData({\r\n                    loading: false,\r\n                    announcements: news,\r\n                });\r\n            });\r\n    }, []);\r\n    return newsData;\r\n};"],"sourceRoot":""}