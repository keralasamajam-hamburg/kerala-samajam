{"version":3,"sources":["contentful/index.ts","assets/images/news-announcement.jpg","pages/Announcements/Announcements.tsx","contentful/useAnnouncements.ts"],"names":["CONTENTFUL_CLIENT","contentful","space","accessToken","module","exports","Meta","Card","News","newsContent","useState","loading","announcements","newsData","setnewsData","useEffect","getEntries","content_type","then","response","news","items","map","item","headline","fields","content","date","image","file","url","id","sys","useAnnouncements","Spinner","announcementsArray","className","property","index","newsDetailLink","split","join","to","key","hoverable","cover","undefined","src","alt","newsImage","title","description","length"],"mappings":"yHAAA,sCAEaA,EAFb,OAEiCC,EAAwB,CACvDC,MAAO,eACPC,YAAa,iD,wCCJfC,EAAOC,QAAU,IAA0B,+C,uKCSnCC,G,OAASC,IAATD,MAkCOE,UAjCQ,WACrB,IAAMC,ECIwB,WAA2B,IAAD,EACtBC,mBAA6B,CACzDC,SAAS,EACTC,cAAe,KAHmC,mBAC/CC,EAD+C,KACrCC,EADqC,KAoCtD,OA9BAC,qBAAU,WAYNf,IAAkBgB,WAXJ,CACVC,aAAc,kBAWbC,MAAK,SAACC,GACH,IAAMC,EAAOD,EAASE,MACjBC,KAAI,SAACC,GAAU,IAAD,EACX,MAAO,CACHC,SAAUD,EAAKE,OAAOD,SACtBE,QAASH,EAAKE,OAAOC,QACrBC,KAAMJ,EAAKE,OAAOE,KAClBC,MAAK,UAAEL,EAAKE,OAAOG,aAAd,aAAE,EAAmBH,OAAOI,KAAKC,IACtCC,GAAIR,EAAKS,IAAID,OAGzBjB,EAAY,CACRH,SAAS,EACTC,cAAeQ,SAG5B,IACIP,EDxCWoB,GACpB,GAAIxB,EAAYE,QACd,OAAO,kBAACuB,EAAA,EAAD,MAGT,IAAMC,EAAqB1B,EAAYG,cACvC,OACE,yBAAKwB,UAAW,iBACd,kBAAC,IAAD,KACE,yEACA,0BAAMC,SAAS,WAAWX,QAAS,4CAErC,kBAAC,IAAD,KACE,8CAEDS,EAAmBb,KAAI,SAACC,EAAMe,GAC7B,IAAMC,EAAc,mBAAehB,EAAKC,SAASgB,MAAM,KAAKC,KAAK,KAA7C,YAAqDlB,EAAKQ,IAC9E,OACE,kBAAC,IAAD,CAAMW,GAAIH,EAAgBI,IAAKL,GAC7B,kBAAC,IAAD,CACEM,WAAS,EACTC,WAAsBC,IAAfvB,EAAKK,MAAsB,yBAAKmB,IAAKxB,EAAKK,MAAOoB,IAAI,KAAQ,yBAAKD,IAAKE,IAAWD,IAAI,MAC7F,kBAAC1C,EAAD,CAAM4C,MAAO3B,EAAKC,SAAU2B,YAAW,uBAAkB5B,EAAKI,aAMvC,IAA9BQ,EAAmBiB,OAAe,kBAAC,IAAD,CAAOD,YAAa,uEAAqD","file":"static/js/16.0ec9724a.chunk.js","sourcesContent":["import * as contentful from 'contentful';\n\nexport const CONTENTFUL_CLIENT = contentful.createClient({\n  space: 'l3rza8k51j1n',\n  accessToken: 'Rf2s92FG4B9lzV78jEL-Xzqu58evFVT7o2kIRBeDCto',\n});","module.exports = __webpack_public_path__ + \"static/media/news-announcement.6117f73b.jpg\";","import { Card, Divider, Empty } from 'antd';\r\nimport React from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { Link } from 'react-router-dom';\r\nimport newsImage from '../../assets/images/news-announcement.jpg';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport { useAnnouncements } from '../../contentful/useAnnouncements';\r\nimport './Announcements.scss';\r\n\r\nconst { Meta } = Card;\r\nconst News: React.FC = () => {\r\n  const newsContent = useAnnouncements();\r\n  if (newsContent.loading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  const announcementsArray = newsContent.announcements;\r\n  return (\r\n    <div className={'announcements'}>\r\n      <Helmet>\r\n        <title>Announcements - Kerala Samajam Hamburg</title>\r\n        <meta property=\"og:title\" content={'Announcements - Kerala Samajam Hamburg'} />\r\n      </Helmet>\r\n      <Divider>\r\n        <h2>Announcements</h2>\r\n      </Divider>\r\n      {announcementsArray.map((item, index) => {\r\n        const newsDetailLink = `/details/${item.headline.split(' ').join('-')}-${item.id}`;\r\n        return (\r\n          <Link to={newsDetailLink} key={index}>\r\n            <Card\r\n              hoverable\r\n              cover={item.image !== undefined ? <img src={item.image} alt=\"\" /> : <img src={newsImage} alt=\"\" />}>\r\n              <Meta title={item.headline} description={`Published on ${item.date}`} />\r\n            </Card>\r\n          </Link>\r\n        );\r\n      })}\r\n\r\n      {announcementsArray.length === 0 ? <Empty description={<h1>No announcements found at the moments</h1>} /> : null}\r\n    </div>\r\n  );\r\n};\r\nexport default News;\r\n","import { useEffect, useState } from 'react';\r\nimport { CONTENTFUL_CLIENT } from './index';\r\nimport { RichTextContent, Asset } from 'contentful';\r\n\r\ninterface AnnouncementsStore {\r\n    loading: boolean;\r\n    announcements: {\r\n        headline: string;\r\n        content: RichTextContent;\r\n        date: Date;\r\n        image: string;\r\n        id: string;\r\n    }[];\r\n}\r\n\r\nexport const useAnnouncements = (): AnnouncementsStore => {\r\n    const [newsData, setnewsData] = useState<AnnouncementsStore>({\r\n        loading: true,\r\n        announcements: []\r\n    });\r\n\r\n    useEffect(() => {\r\n        const query = {\r\n            content_type: 'announcements',\r\n        };\r\n\r\n        type ExpectedOutput = {\r\n            headline: string;\r\n            content: RichTextContent;\r\n            date: Date;\r\n            image: Asset;\r\n        };\r\n\r\n        CONTENTFUL_CLIENT.getEntries<ExpectedOutput>(query)\r\n            .then((response) => {\r\n                const news = response.items\r\n                    .map((item) => {\r\n                        return {\r\n                            headline: item.fields.headline,\r\n                            content: item.fields.content,\r\n                            date: item.fields.date,\r\n                            image: item.fields.image?.fields.file.url,\r\n                            id: item.sys.id\r\n                        };\r\n                    })\r\n                setnewsData({\r\n                    loading: false,\r\n                    announcements: news,\r\n                });\r\n            });\r\n    }, []);\r\n    return newsData;\r\n};"],"sourceRoot":""}